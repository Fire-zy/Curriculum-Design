<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>